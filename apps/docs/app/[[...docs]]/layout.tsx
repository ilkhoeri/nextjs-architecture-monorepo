import { i18n } from '@/i18n';
import { Main } from '@/ui/main';
import { bodyConfig } from '../fonts';
import { geti18n } from '@/i18n/intl';
import { cookies } from 'next/headers';
import { NavHead } from '@/ui/navhead';
import { NavLeft } from '@/ui/navleft';
import { NavFoot } from '@/ui/navfoot';
import { Cookies } from '@/context/types';
import { NavProvider } from '@/ui/nav-ctx';
import { notFound } from 'next/navigation';
import { AppProvider } from '@/context/app-context';
import { ThemeProvider } from '@repo/components/theme/index';

import type { Metadata } from 'next';

import '../../style/custom.css';

export function metadata(): Metadata {
  return {
    title: {
      template: '%s | Docs',
      default: 'Docs'
    },
    description: 'Generated by create turbo'
  };
}

export async function generateStaticParams() {
  return i18n.locales.map(locale => ({ docs: [locale] }));
}

async function getCookiesValues() {
  const cookieStore = await cookies();

  const dir = cookieStore.get(Cookies.dir)?.value || 'ltr';
  const theme = cookieStore.get(Cookies.theme)?.value;
  const isOpenAside = cookieStore.get(Cookies.isOpenAside)?.value;

  return {
    store() {
      return cookieStore;
    },
    dir,
    theme,
    isOpenAside
  };
}

interface RootLayoutProps {
  children: React.ReactNode;
  params: Promise<{ docs?: string[] }>;
}

export default async function RootLayout({ children, params }: Readonly<RootLayoutProps>) {
  const lang = (await params).docs?.[0];
  const [intl, { store: _, ...cookiesStore }] = await Promise.all([geti18n(lang), getCookiesValues()]);

  if (lang && !i18n.locales.includes(lang)) notFound();

  return (
    <AppProvider dict={intl.messages as any} lang={intl.locale} {...cookiesStore}>
      <html lang={intl.locale} dir={cookiesStore.dir} suppressHydrationWarning>
        <head>
          <link rel="icon" sizes="any" type="image/x-icon" href="/favicon.ico" />
          <link rel="shortcut icon" href="/favicon.ico" />
        </head>
        <body {...bodyConfig('bg-background-theme')}>
          <ThemeProvider>
            <NavProvider>
              <NavHead />
              <Main>
                <NavLeft />
                {children}
              </Main>
              <NavFoot />
            </NavProvider>
          </ThemeProvider>
        </body>
      </html>
    </AppProvider>
  );
}
